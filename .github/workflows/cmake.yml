name: CMake

on: 
  push:
  pull_request:

  # this allows us to manually dispatch the build from GH Actions UI
  workflow_dispatch:
    inputs:
      buildType:
        description: CMake build type (config)
        required: true
        default: 'Release'
        type: choice
        options:
        - Release
        - Debug

env:
  # if the build is not manually dispatched we will default to 'Release' build
  BUILD_TYPE: ${{ inputs.buildType || 'Release' }}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    # The CMake configure and build commands are platform agnostic
    # and should work equally well on Windows or Mac.
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: lukka/get-cmake@latest

    - name: CMake Configure
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -S . -B build -D CMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: CMake Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build --config $BUILD_TYPE



    # NOTICE current error is 

    #    Run ctest -C $BUILD_TYPE
    #    env:
    #      BUILD_TYPE: Release
    #    Test project /home/runner/work/bmai/bmai/build
    #    No tests were found!!!

    # maybe we havent written tests and I just put this in here to follow some template?
    # TODO add some tests, or fix the problem running them

    - name: Test
      working-directory: build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
    
    - name: Upload *NIX Binary
      uses: actions/upload-artifact@v3
      if: matrix.os != 'windows-latest'
      with:
          name: bmai-${{runner.os}}
          path: ./build/bmai

    - name: Upload WINDOWS Binary
      uses: actions/upload-artifact@v3
      if: matrix.os == 'windows-latest'
      with:
          name: bmai-${{runner.os}}
          path: ${{github.workspace}}\build\${{ env.BUILD_TYPE }}\bmai.exe
